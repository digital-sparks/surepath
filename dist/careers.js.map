{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/careers.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "window.Webflow ||= [];\nwindow.Webflow.push(() => {\n\n// Fetch job data from the API\nfetch('https://api.rippling.com/platform/api/ats/v1/board/surepath-ai/jobs')\n  .then(response => response.json())\n  .then(jobs => {\n    // Get unique departments\n    const departments = [...new Set(jobs.map(job => job.department.label))];\n\n    // Get the job_component element\n    const jobComponent = document.querySelector('.job_component');\n\n    // For each department\n    departments.forEach(department => {\n      // Clone the department-wrap element\n      const departmentWrap = document.querySelector('[fs-element=\"department-wrap\"]').cloneNode(true);\n\n     // Set the department name for all matching elements\n    departmentWrap.querySelectorAll('[fs-element=\"department\"]').forEach(element => {\n    element.textContent = department;\n    });\n\n      // Get jobs for this department\n      const departmentJobs = jobs.filter(job => job.department.label === department);\n\n      // Remove the original job element (we'll replace it with new ones)\n      departmentWrap.querySelector('[fs-element=\"job\"]').remove();\n\n      // For each job in this department\n      departmentJobs.forEach(job => {\n        // Clone the job element\n        const jobElement = document.querySelector('[fs-element=\"job\"]').cloneNode(true);\n\n        // Set job title and link\n        const jobLink = jobElement.querySelector('[fs-element=\"job-link\"]');\n        jobLink.href = job.url;\n\n        const jobTitle = jobElement.querySelector('[fs-element=\"job-title\"]');\n        jobTitle.textContent = job.name;\n        jobTitle.href = job.url;\n\n        // Set location\n        jobElement.querySelector('[fs-element=\"location\"]').textContent = job.workLocation.label;\n\n        // Append the job element to the department wrap\n        departmentWrap.appendChild(jobElement);\n      });\n\n      // Append the department wrap to the job component\n      jobComponent.appendChild(departmentWrap);\n    });\n\n    // Remove the original department-wrap element\n    document.querySelector('[fs-element=\"department-wrap\"]').remove();\n  })\n.catch(error => console.error('Error fetching jobs:', error));\n\n})"],
  "mappings": ";;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACA7F,SAAO,YAAY,CAAC;AACpB,SAAO,QAAQ,KAAK,MAAM;AAG1B,UAAM,qEAAqE,EACxE,KAAK,cAAY,SAAS,KAAK,CAAC,EAChC,KAAK,UAAQ;AAEZ,YAAM,cAAc,CAAC,GAAG,IAAI,IAAI,KAAK,IAAI,SAAO,IAAI,WAAW,KAAK,CAAC,CAAC;AAGtE,YAAM,eAAe,SAAS,cAAc,gBAAgB;AAG5D,kBAAY,QAAQ,gBAAc;AAEhC,cAAM,iBAAiB,SAAS,cAAc,gCAAgC,EAAE,UAAU,IAAI;AAGhG,uBAAe,iBAAiB,2BAA2B,EAAE,QAAQ,aAAW;AAChF,kBAAQ,cAAc;AAAA,QACtB,CAAC;AAGC,cAAM,iBAAiB,KAAK,OAAO,SAAO,IAAI,WAAW,UAAU,UAAU;AAG7E,uBAAe,cAAc,oBAAoB,EAAE,OAAO;AAG1D,uBAAe,QAAQ,SAAO;AAE5B,gBAAM,aAAa,SAAS,cAAc,oBAAoB,EAAE,UAAU,IAAI;AAG9E,gBAAM,UAAU,WAAW,cAAc,yBAAyB;AAClE,kBAAQ,OAAO,IAAI;AAEnB,gBAAM,WAAW,WAAW,cAAc,0BAA0B;AACpE,mBAAS,cAAc,IAAI;AAC3B,mBAAS,OAAO,IAAI;AAGpB,qBAAW,cAAc,yBAAyB,EAAE,cAAc,IAAI,aAAa;AAGnF,yBAAe,YAAY,UAAU;AAAA,QACvC,CAAC;AAGD,qBAAa,YAAY,cAAc;AAAA,MACzC,CAAC;AAGD,eAAS,cAAc,gCAAgC,EAAE,OAAO;AAAA,IAClE,CAAC,EACF,MAAM,WAAS,QAAQ,MAAM,wBAAwB,KAAK,CAAC;AAAA,EAE5D,CAAC;",
  "names": []
}
