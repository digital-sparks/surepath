{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/careers.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "window.Webflow ||= [];\nwindow.Webflow.push(() => {\n  // Configurable elements and selectors\n  const CONFIG = {\n    // Selector for the element that displays the job count string\n    jobCountSelector: '[fs-element=\"summary\"]',\n\n    // Selector for the department wrap template\n    departmentWrapTemplateSelector: '[fs-element=\"department-wrap\"]',\n\n    // Selector for the department name within the department wrap\n    departmentNameSelector: '[fs-cmsfilter-field=\"department\"]',\n\n    // Selector for the job title within the department wrap\n    jobTitleSelector: '[fs-cmsfilter-field=\"title\"]',\n\n    // Selector for the location within the department wrap\n    locationSelector: '[fs-cmsfilter-field=\"location\"]',\n\n    // Selector for the \"empty\" message link\n    emptyMessageLinkSelector: '[fs-cmsfilter-element=\"empty\"] a',\n\n    // Selector for the clear filters button\n    clearFiltersSelector: '[fs-cmsfilter-element=\"clear\"]',\n\n    // Class name for identifying job items\n    jobItemClassName: 'w-dyn-item',\n  };\n\n  const departments = new Set();\n  const locations = new Set();\n\n  const createOption = (target, value) => {\n    const select = document.querySelector(`select[fs-cmsfilter-field=\"${target}\"]`);\n    const opt = document.createElement('option');\n    opt.value = opt.innerHTML = value;\n    select.appendChild(opt);\n  };\n\n  const updateJobCountDisplay = (count, departmentCount, locationCount) => {\n    const pluralize = (count, singular, total) =>\n      `${count === total ? 'all' : count} ${singular}${count !== 1 ? 's' : ''}`;\n\n    const textString = `${count} role${count !== 1 ? 's' : ''} across <strong>${pluralize(\n      departmentCount,\n      'department',\n      departments.size\n    )}</strong> and <strong>${pluralize(locationCount, 'location', locations.size)}</strong>`;\n\n    document.querySelector(CONFIG.jobCountSelector).innerHTML = textString;\n  };\n\n  const processItem = async (item, departmentWrapTemplate, listInstance) => {\n    const department = [...item.props.department.values][0];\n    const location = [...item.props.location.values][0];\n\n    if (!locations.has(location)) {\n      locations.add(location);\n      createOption('location', location);\n    }\n\n    if (!departments.has(department)) {\n      departments.add(department);\n      createOption('department', department);\n\n      if (departmentWrapTemplate) {\n        const departmentEl = departmentWrapTemplate.cloneNode(true);\n        const departmentNameElement = departmentEl.querySelector(CONFIG.departmentNameSelector);\n        if (departmentNameElement) {\n          departmentNameElement.textContent = department;\n        }\n\n        const jobNameElement = departmentEl.querySelector(CONFIG.jobTitleSelector);\n        const locationNameElement = departmentEl.querySelector(CONFIG.locationSelector);\n\n        listInstance.items.forEach((innerItem) => {\n          const innerDepartment = [...innerItem.props.department.values][0];\n          const innerLocation = [...innerItem.props.location.values][0];\n          const innerTitle = [...innerItem.props.title.values][0];\n\n          if (innerDepartment === department) {\n            const newEl = locationNameElement.cloneNode(true);\n            newEl.textContent = innerLocation;\n            locationNameElement.appendChild(newEl);\n\n            jobNameElement.innerHTML += ` ${innerTitle}`;\n          }\n        });\n\n        await listInstance.addStaticItems([\n          {\n            itemElement: departmentEl,\n            targetIndex: item.currentIndex,\n            interactive: true,\n          },\n        ]);\n      }\n    }\n  };\n\n  window.fsAttributes = window.fsAttributes || [];\n  window.fsAttributes.push([\n    'cmsfilter',\n    async (filtersInstances) => {\n      const [filtersInstance] = filtersInstances;\n      const { listInstance } = filtersInstance;\n\n      const departmentWrapTemplate = document.querySelector(CONFIG.departmentWrapTemplateSelector);\n\n      for (const item of listInstance.items) {\n        await processItem(item, departmentWrapTemplate, listInstance);\n      }\n\n      const jobItems = listInstance.items.filter((item) =>\n        item.element.classList.contains(CONFIG.jobItemClassName)\n      );\n      updateJobCountDisplay(jobItems.length, departments.size, locations.size);\n\n      listInstance.on('renderitems', (renderedItems) => {\n        const filterItems = renderedItems.filter((item) =>\n          item.element.classList.contains(CONFIG.jobItemClassName)\n        );\n\n        const counts = filterItems.reduce(\n          (acc, { props }) => {\n            props?.location?.values?.forEach((loc) => acc.locations.add(loc));\n            props?.department?.values?.forEach((dept) => acc.departments.add(dept));\n            return acc;\n          },\n          { count: 0, locations: new Set(), departments: new Set() }\n        );\n\n        updateJobCountDisplay(filterItems.length, counts.departments.size, counts.locations.size);\n      });\n    },\n  ]);\n\n  document.querySelector(CONFIG.emptyMessageLinkSelector).addEventListener('click', () => {\n    document.querySelector(CONFIG.clearFiltersSelector).click();\n  });\n});\n"],
  "mappings": "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",
  "names": ["count", "location"]
}
